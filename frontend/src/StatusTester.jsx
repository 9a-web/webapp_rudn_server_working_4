import React, { useState } from 'react';
import { useTranslation } from 'react-i18next';

// –¢–µ—Å—Ç–µ—Ä —Å—Ç–∞—Ç—É—Å–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–æ–≥–∏–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤ –∑–∞–Ω—è—Ç–∏–π
export const StatusTester = () => {
  const { t } = useTranslation();
  const [currentTime, setCurrentTime] = useState('15:30');
  const [selectedDate, setSelectedDate] = useState('today');
  
  // –¢–µ—Å—Ç–æ–≤—ã–µ –∑–∞–Ω—è—Ç–∏—è
  const testClasses = [
    { discipline: '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', time: '09:00-10:20', day: '–í—Ç–æ—Ä–Ω–∏–∫' },
    { discipline: '–§–∏–∑–∏–∫–∞', time: '10:30-11:50', day: '–í—Ç–æ—Ä–Ω–∏–∫' },
    { discipline: '–ò—Å—Ç–æ—Ä–∏—è', time: '13:00-14:20', day: '–í—Ç–æ—Ä–Ω–∏–∫' },
    { discipline: '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π', time: '14:30-15:50', day: '–í—Ç–æ—Ä–Ω–∏–∫' },
    { discipline: '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ', time: '16:00-17:20', day: '–í—Ç–æ—Ä–Ω–∏–∫' }
  ];

  const getClassStatus = (classItem, simulatedTime, dateOption) => {
    const [hours, minutes] = simulatedTime.split(':').map(Number);
    const currentMinutes = hours * 60 + minutes;

    const today = new Date();
    let selectedDateObj;
    
    if (dateOption === 'today') {
      selectedDateObj = new Date(today.getFullYear(), today.getMonth(), today.getDate());
    } else if (dateOption === 'yesterday') {
      selectedDateObj = new Date(today.getFullYear(), today.getMonth(), today.getDate() - 1);
    } else {
      selectedDateObj = new Date(today.getFullYear(), today.getMonth(), today.getDate() + 1);
    }

    const isToday = selectedDateObj.toDateString() === today.toDateString();

    const timeRange = classItem.time.split('-');
    if (timeRange.length !== 2) return { status: '–ü—Ä–µ–¥—Å—Ç–æ–∏—Ç', color: '#FF6B6B' };

    const [startHour, startMin] = timeRange[0].trim().split(':').map(Number);
    const [endHour, endMin] = timeRange[1].trim().split(':').map(Number);
    const startTime = startHour * 60 + startMin;
    const endTime = endHour * 60 + endMin;

    // –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω –ø—Ä–æ—à–ª—ã–π –¥–µ–Ω—å
    if (selectedDateObj < new Date(today.getFullYear(), today.getMonth(), today.getDate())) {
      return { status: '–ó–∞–∫–æ–Ω—á–∏–ª–∞—Å—å', color: '#76EF83' };
    }

    // –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω –±—É–¥—É—â–∏–π –¥–µ–Ω—å
    if (selectedDateObj > new Date(today.getFullYear(), today.getMonth(), today.getDate())) {
      return { status: '–ü—Ä–µ–¥—Å—Ç–æ–∏—Ç', color: '#FF6B6B' };
    }

    // –ï—Å–ª–∏ —Å–µ–≥–æ–¥–Ω—è - –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ –≤—Ä–µ–º–µ–Ω–∏
    if (isToday) {
      if (currentMinutes >= endTime) {
        return { status: '–ó–∞–∫–æ–Ω—á–∏–ª–∞—Å—å', color: '#76EF83' };
      } else if (currentMinutes >= startTime && currentMinutes < endTime) {
        return { status: '–ò–¥—ë—Ç —Å–µ–π—á–∞—Å', color: '#FFC83F' };
      } else {
        return { status: '–ü—Ä–µ–¥—Å—Ç–æ–∏—Ç', color: '#FF6B6B' };
      }
    }

    return { status: '–ü—Ä–µ–¥—Å—Ç–æ–∏—Ç', color: '#FF6B6B' };
  };

  const timeOptions = [
    '08:00', '09:30', '10:45', '12:00', '13:30', '15:00', '16:30', '18:00', '20:00'
  ];

  return (
    <div style={{ 
      minHeight: '100vh', 
      backgroundColor: '#1A1A1A',
      padding: '20px',
      color: '#FFFFFF'
    }}>
      <div style={{
        maxWidth: '800px',
        margin: '0 auto'
      }}>
        <h1 style={{ color: '#A3F7BF', marginBottom: '30px', textAlign: 'center' }}>
          üß™ –¢–µ—Å—Ç–µ—Ä —Å—Ç–∞—Ç—É—Å–æ–≤ –∑–∞–Ω—è—Ç–∏–π
        </h1>

        {/* –ö–æ–Ω—Ç—Ä–æ–ª—å –≤—Ä–µ–º–µ–Ω–∏ */}
        <div style={{
          backgroundColor: '#2A2A2A',
          padding: '20px',
          borderRadius: '12px',
          marginBottom: '20px'
        }}>
          <h3 style={{ color: '#FFE66D', marginBottom: '15px' }}>‚è∞ –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è</h3>
          <div style={{ display: 'flex', gap: '10px', flexWrap: 'wrap' }}>
            {timeOptions.map(time => (
              <button
                key={time}
                onClick={() => setCurrentTime(time)}
                style={{
                  padding: '10px 20px',
                  backgroundColor: currentTime === time ? '#A3F7BF' : '#343434',
                  color: currentTime === time ? '#1A1A1A' : '#FFFFFF',
                  border: 'none',
                  borderRadius: '8px',
                  cursor: 'pointer',
                  fontWeight: 'bold'
                }}
              >
                {time}
              </button>
            ))}
          </div>
          <div style={{ marginTop: '15px' }}>
            <label style={{ display: 'block', marginBottom: '8px' }}>–ò–ª–∏ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ—ë –≤—Ä–µ–º—è:</label>
            <input
              type="time"
              value={currentTime}
              onChange={(e) => setCurrentTime(e.target.value)}
              style={{
                padding: '10px',
                backgroundColor: '#343434',
                color: '#FFFFFF',
                border: '1px solid #555',
                borderRadius: '8px',
                fontSize: '16px'
              }}
            />
          </div>
        </div>

        {/* –ö–æ–Ω—Ç—Ä–æ–ª—å –¥–∞—Ç—ã */}
        <div style={{
          backgroundColor: '#2A2A2A',
          padding: '20px',
          borderRadius: '12px',
          marginBottom: '30px'
        }}>
          <h3 style={{ color: '#FFE66D', marginBottom: '15px' }}>üìÖ –í—ã–±—Ä–∞–Ω–Ω–∞—è –¥–∞—Ç–∞</h3>
          <div style={{ display: 'flex', gap: '10px' }}>
            {['yesterday', 'today', 'tomorrow'].map(option => (
              <button
                key={option}
                onClick={() => setSelectedDate(option)}
                style={{
                  padding: '10px 20px',
                  backgroundColor: selectedDate === option ? '#FFB4D1' : '#343434',
                  color: selectedDate === option ? '#1A1A1A' : '#FFFFFF',
                  border: 'none',
                  borderRadius: '8px',
                  cursor: 'pointer',
                  fontWeight: 'bold',
                  flex: 1
                }}
              >
                {option === 'yesterday' ? '–í—á–µ—Ä–∞' : option === 'today' ? '–°–µ–≥–æ–¥–Ω—è' : '–ó–∞–≤—Ç—Ä–∞'}
              </button>
            ))}
          </div>
        </div>

        {/* –†–µ–∑—É–ª—å—Ç–∞—Ç—ã */}
        <div style={{
          backgroundColor: '#2A2A2A',
          padding: '20px',
          borderRadius: '12px'
        }}>
          <h3 style={{ color: '#FFE66D', marginBottom: '20px' }}>üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è</h3>
          <div style={{ marginBottom: '15px', padding: '10px', backgroundColor: '#343434', borderRadius: '8px' }}>
            <strong>–°–∏–º—É–ª—è—Ü–∏—è:</strong> {
              selectedDate === 'yesterday' ? '–í—á–µ—Ä–∞' : selectedDate === 'today' ? '–°–µ–≥–æ–¥–Ω—è' : '–ó–∞–≤—Ç—Ä–∞'
            }, –≤—Ä–µ–º—è: <strong style={{ color: '#FFC83F' }}>{currentTime}</strong>
          </div>
          
          {testClasses.map((classItem, index) => {
            const status = getClassStatus(classItem, currentTime, selectedDate);
            return (
              <div
                key={index}
                style={{
                  backgroundColor: '#343434',
                  padding: '15px',
                  borderRadius: '12px',
                  marginBottom: '10px',
                  borderLeft: `4px solid ${status.color}`
                }}
              >
                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>
                  <div>
                    <div style={{ fontSize: '18px', fontWeight: 'bold', marginBottom: '5px' }}>
                      {classItem.discipline}
                    </div>
                    <div style={{ color: '#999999' }}>
                      {classItem.time}
                    </div>
                  </div>
                  <div
                    style={{
                      padding: '8px 16px',
                      backgroundColor: status.color + '33',
                      color: status.color,
                      borderRadius: '8px',
                      fontWeight: 'bold',
                      fontSize: '14px'
                    }}
                  >
                    {status.status}
                  </div>
                </div>
              </div>
            );
          })}
        </div>

        {/* –õ–µ–≥–µ–Ω–¥–∞ */}
        <div style={{
          marginTop: '20px',
          padding: '15px',
          backgroundColor: '#2A2A2A',
          borderRadius: '12px'
        }}>
          <h4 style={{ marginBottom: '10px' }}>üìñ –õ–µ–≥–µ–Ω–¥–∞ —Å—Ç–∞—Ç—É—Å–æ–≤:</h4>
          <div style={{ display: 'flex', gap: '20px', flexWrap: 'wrap' }}>
            <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>
              <div style={{ width: '20px', height: '20px', backgroundColor: '#76EF83', borderRadius: '4px' }}></div>
              <span>–ó–∞–∫–æ–Ω—á–∏–ª–∞—Å—å</span>
            </div>
            <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>
              <div style={{ width: '20px', height: '20px', backgroundColor: '#FFC83F', borderRadius: '4px' }}></div>
              <span>–ò–¥—ë—Ç —Å–µ–π—á–∞—Å</span>
            </div>
            <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>
              <div style={{ width: '20px', height: '20px', backgroundColor: '#FF6B6B', borderRadius: '4px' }}></div>
              <span>–ü—Ä–µ–¥—Å—Ç–æ–∏—Ç</span>
            </div>
          </div>
        </div>

        {/* –¢–µ—Å—Ç–æ–≤—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ */}
        <div style={{
          marginTop: '20px',
          padding: '15px',
          backgroundColor: '#2A2A2A',
          borderRadius: '12px'
        }}>
          <h4 style={{ marginBottom: '10px', color: '#C4A3FF' }}>üß™ –¢–µ—Å—Ç–æ–≤—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏:</h4>
          <ol style={{ lineHeight: '1.8', color: '#CCCCCC' }}>
            <li><strong>–£—Ç—Ä–æ (08:00, –°–µ–≥–æ–¥–Ω—è):</strong> –í—Å–µ –∑–∞–Ω—è—Ç–∏—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å "–ü—Ä–µ–¥—Å—Ç–æ–∏—Ç"</li>
            <li><strong>–í–æ –≤—Ä–µ–º—è –∑–∞–Ω—è—Ç–∏—è (09:30, –°–µ–≥–æ–¥–Ω—è):</strong> –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ "–ò–¥—ë—Ç —Å–µ–π—á–∞—Å", –æ—Å—Ç–∞–ª—å–Ω—ã–µ "–ü—Ä–µ–¥—Å—Ç–æ–∏—Ç"</li>
            <li><strong>–ö–æ–Ω–µ—Ü –¥–Ω—è (18:00, –°–µ–≥–æ–¥–Ω—è):</strong> –í—Å–µ –∑–∞–Ω—è—Ç–∏—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å "–ó–∞–∫–æ–Ω—á–∏–ª–∞—Å—å"</li>
            <li><strong>–õ—é–±–æ–µ –≤—Ä–µ–º—è (–í—á–µ—Ä–∞):</strong> –í—Å–µ –∑–∞–Ω—è—Ç–∏—è "–ó–∞–∫–æ–Ω—á–∏–ª–∞—Å—å"</li>
            <li><strong>–õ—é–±–æ–µ –≤—Ä–µ–º—è (–ó–∞–≤—Ç—Ä–∞):</strong> –í—Å–µ –∑–∞–Ω—è—Ç–∏—è "–ü—Ä–µ–¥—Å—Ç–æ–∏—Ç"</li>
          </ol>
        </div>
      </div>
    </div>
  );
};

export default StatusTester;
